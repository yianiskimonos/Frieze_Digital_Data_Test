-- REVENUE DATA SET --

SELECT *
From Frieze.dbo.Revenue

--STANDARDISED DATE FORMAT
ALTER TABLE Frieze.dbo.Revenue
ADD FormatDate VARCHAR(10);

UPDATE Frieze.dbo.Revenue
SET FormatDate = CONVERT(VARCHAR(10), Date, 105);

ALTER TABLE Frieze.dbo.Revenue
DROP COLUMN FormatDate;

EXEC sp_rename 'Frieze.dbo.Revenue.FormatDate', 'Date', 'COLUMN';
EXEC sp_rename 'Frieze.dbo.Revenue.Month Number', 'Month', 'COLUMN';

## Changes;
-- Changed Date Format to DD-MM-YEAR
## Steps;
-- Added a new column named FormatDate
-- Updated the new column with formatted date values
-- Dropped the old Date column
-- Renamed the FormatDate column to Date, Month Number to Month


-- Removing NULL Values
DELETE FROM Frieze.dbo.Revenue
WHERE Revenue IS NULL;

-- VISITORS DATA SET --

--STANDATDISE DATE FORMAT
SELECT *
From Frieze.dbo.Visitors

ALTER TABLE Frieze.dbo.Visitors
ADD FormatDate VARCHAR(10);

UPDATE Frieze.dbo.Visitors
SET FormatDate = CONVERT(VARCHAR(10), Date, 105);

ALTER TABLE Frieze.dbo.Visitors
DROP COLUMN Date;

EXEC sp_rename 'Frieze.dbo.Visitors.FormatDate', 'Date', 'COLUMN';

## Changes;
-- Changed Date Format to DD-MM-YEAR
## Steps;
-- Added a new column named FormatDate
-- Updated the new column with formatted date values
-- Dropped the old Date column
-- Renamed the FormatDate column to Date and Promotion


-- Removing NULL Values
DELETE FROM Frieze.dbo.Visitors
WHERE Visitors IS NULL;


-- MARKETING DATA SET

-- STANDATDISE DATE FORMAT
SELECT *
From Frieze.dbo.Marketing

ALTER TABLE Frieze.dbo.Marketing
ADD FormatDate VARCHAR(10);

UPDATE Frieze.dbo.Marketing
SET FormatDate = CONVERT(VARCHAR(10), Date, 105);

ALTER TABLE Frieze.dbo.Marketing
DROP COLUMN Date;

EXEC sp_rename 'Frieze.dbo.Marketing.FormatDate', 'Date', 'COLUMN';
EXEC sp_rename 'Frieze.dbo.Marketing.Promo', 'Promotion', 'COLUMN';
EXEC sp_rename 'Frieze.dbo.Marketing.Marketing Spend', 'Marketing_Cost', 'COLUMN';

-- Renaming 
UPDATE Frieze.dbo.Marketing
SET Promotion = 'None'
WHERE Promotion = 'No Promo';

UPDATE Frieze.dbo.Marketing
SET Promotion = 'Red'
WHERE Promotion = 'Promotion Red';

UPDATE Frieze.dbo.Marketing
SET Promotion = 'Blue'
WHERE Promotion = 'Promotion Blue';

UPDATE Frieze.dbo.Marketing
SET Marketing_Cost = ROUND(Marketing_Cost, 0);

## Changes;
-- Changed Date Format to DD-MM-YEAR
-- Renaming of columns
-- Removing decinal places, to match REVENUE decimal places which in this case in zero.
## Steps;
-- Add a new column named FormattedDate
-- Update the new column with formatted date values
-- Drop the old Date column
-- Rename the FormattedDate column to Date, Promo to Promotion, Marketing Spend to Marketing_Cost


-- Removing NULL Values
DELETE FROM Frieze.dbo.Marketing
WHERE Marketing_Cost IS NULL;


--TOTAL REVENUE GENERATED
SELECT SUM(Revenue) AS TotalRevenue
FROM FriezeProject.dbo.Revenue;


-- REVENUE GENERATED BY CAMPAIGN

CREATE TABLE #TempGraph (
    Date DATE,
    Revenue DECIMAL(18, 0),
    Promotion VARCHAR(50)
);

SELECT
    R.Date,
    R.Revenue,
    P.Promotion
INTO #TempGraph
FROM
    Frieze.dbo.Revenue AS R
INNER JOIN
    Frieze.dbo.Marketing AS P
ON
    R.Date = P.Date;

SELECT * FROM #TempGraph;

DROP TABLE #TempGraph;

##Changes;
-- Added a tempgraph

SELECT
    Promotion,
    SUM(Revenue) AS Total_Revenue
FROM
    #TempGraph
GROUP BY
    Promotion
ORDER BY
    Total_Revenue DESC;

-- AVERAGE REVENUE BY WEEK

SELECT
    Week_ID,
    CONVERT(INT, AVG(revenue)) AS WeeklyAverageRevenue
FROM
    Frieze.dbo.Revenue
GROUP BY
    Week_ID;


-- TOTAL WEEKLY AVERAGE REVENUE
SELECT *
From Frieze.dbo.Revenue

SELECT COUNT(DISTINCT Week_ID) AS unique_count_week
FROM Frieze.dbo.Revenue;

SELECT ROUND(AVG(revenue) / 9, 0) AS Weekly_Average
FROM Frieze.dbo.Revenue;

-- MOST PROFIT

SELECT *
From Frieze.dbo.Revenue

SELECT  
		R.Date,
		R.Day_Name, 
		R.Revenue, 
		MCD.Marketing_Cost
FROM Frieze.dbo.Revenue AS R
INNER JOIN Frieze.dbo.Marketing_Cost_Days AS MCD
ON R.date = MCD.date;

SELECT TOP 7 R.day_name,
       CAST(AVG(R.revenue - MCD.Marketing_Cost) AS DECIMAL(10, 0)) AS avg_profit
FROM Frieze.dbo.Revenue AS R
INNER JOIN Frieze.dbo.Marketing_Cost_Days AS MCD
ON R.date = MCD.date
GROUP BY R.day_name
ORDER BY avg_profit DESC;


-- Day of the week with the highest average number of visitors

UPDATE Frieze.dbo.Visitors
SET Date = LTRIM(RTRIM(Date));

SELECT
    Visitors,
    Date,
    DATENAME(dw, TRY_CONVERT(DATE, Date, 103)) AS Day_Name
FROM
    Frieze.dbo.Visitors;

## Changes;
-- Converted the DD-MM-YEAR to Day_Name(Monday-Sunday)


-- CALCULATE THE AVERAGE_VISITORS
SELECT
    DATENAME(dw, CONVERT(DATE, Date, 103)) AS Day_Name,
    CAST(AVG(Visitors) AS INT) AS Average_Visitors
FROM
    Frieze.dbo.Visitors
GROUP BY
    DATENAME(dw, CONVERT(DATE, Date, 103))
ORDER BY
    CASE
        WHEN DATENAME(dw, CONVERT(DATE, Date, 103)) = 'Monday' THEN 1
        WHEN DATENAME(dw, CONVERT(DATE, Date, 103)) = 'Tuesday' THEN 2
        WHEN DATENAME(dw, CONVERT(DATE, Date, 103)) = 'Wednesday' THEN 3
        WHEN DATENAME(dw, CONVERT(DATE, Date, 103)) = 'Thursday' THEN 4
        WHEN DATENAME(dw, CONVERT(DATE, Date, 103)) = 'Friday' THEN 5
        WHEN DATENAME(dw, CONVERT(DATE, Date, 103)) = 'Saturday' THEN 6
        WHEN DATENAME(dw, CONVERT(DATE, Date, 103)) = 'Sunday' THEN 7
    END DESC;

-- SINGLE DAY WITH THE HIGHEST VISITORS

SELECT TOP 10
    Date,
    Visitors
FROM
    Frieze.dbo.Visitors
ORDER BY
    Visitors DESC;

-- AVERAGE VISITORS BY WEEK

SELECT
    Date,
    Visitors,
    DATEDIFF(WEEK, '2020-11-09', CONVERT(DATE, Date, 103)) + 35 AS Weeks
FROM Frieze.dbo.Visitors;

SELECT Weeks, ROUND(AVG(Visitors), 0) AS AverageVisitors
FROM (
    SELECT
        Date,
        Visitors,
		DATEDIFF(WEEK, '2020-11-09', CONVERT(DATE, Date, 103)) + 35 AS Weeks
    FROM Frieze.dbo.Visitors
) AS Subquery
GROUP BY Weeks
ORDER BY Weeks;




SELECT
    ROUND(SUM(Visitors) / 26, 0) AS Average_Marketing_Cost_All_Weeks
FROM Frieze.dbo.Visitors;

-- Day of the week where profitability is highest

SELECT *
From Frieze.dbo.Visitors


SELECT
    Date,
    Visitors,
    DATEDIFF(WEEK, '2020-11-09', CONVERT(DATE, Date, 103)) + 35 AS Weeks
FROM Frieze.dbo.Visitors;


-- FINDING WHICH PROMOTION COST THE MOST
SELECT
    Promotion,
    SUM([Marketing_Cost]) AS TotalCost
FROM
    Frieze.dbo.Marketing
GROUP BY
    Promotion
ORDER BY
    TotalCost DESC;

-- Weekly average marketing cost

SELECT *
From Frieze.dbo.Marketing

SELECT
        Date,
        Marketing_Cost,
        DATEDIFF(WEEK, CONVERT(DATE, Date, 103), '2021-05-09') AS Weeks
    FROM Frieze.dbo.Marketing


WITH TempGraph5 AS (
    SELECT
        Date,
        Marketing_Cost,
        DATEDIFF(WEEK, CONVERT(DATE, Date, 103), '2021-05-09') AS Weeks
    FROM Frieze.dbo.Marketing
)
SELECT * INTO #TempGraph5 FROM TempGraph5;

SELECT *
FROM #TempGraph5;

DROP TABLE #TempGraph;

SELECT
    ROUND(SUM(Marketing_Cost) / 26, 0) AS Average_Marketing_Cost_All_Weeks
FROM Frieze.dbo.Marketing;

SELECT *
From Frieze.dbo.Marketing

-- Day of the week where profitability is highest

SELECT *
From Frieze.dbo.Marketing

SELECT
    Date,
    Marketing_Cost,
    CASE
        WHEN DATEPART(WEEKDAY, CONVERT(DATE, Date, 103)) = 1 THEN 'Sunday'
        WHEN DATEPART(WEEKDAY, CONVERT(DATE, Date, 103)) = 2 THEN 'Monday'
        WHEN DATEPART(WEEKDAY, CONVERT(DATE, Date, 103)) = 3 THEN 'Tuesday'
        WHEN DATEPART(WEEKDAY, CONVERT(DATE, Date, 103)) = 4 THEN 'Wednesday'
        WHEN DATEPART(WEEKDAY, CONVERT(DATE, Date, 103)) = 5 THEN 'Thursday'
        WHEN DATEPART(WEEKDAY, CONVERT(DATE, Date, 103)) = 6 THEN 'Friday'
        WHEN DATEPART(WEEKDAY, CONVERT(DATE, Date, 103)) = 7 THEN 'Saturday'
    END AS Day_Name

INTO Marketing_Cost_Days
FROM Frieze.dbo.Marketing;

-- Weekly average marketing cost

SELECT Weeks, ROUND(AVG(Marketing_Cost), 0) AS AverageMarketing
FROM (
    SELECT
        Date,
        Marketing_Cost,
        DATEDIFF(WEEK, CONVERT(DATE, Date, 103), '2021-05-09') AS Weeks
    FROM Frieze.dbo.Marketing
) AS Subquery
GROUP BY Weeks
ORDER BY Weeks;

SELECT *
From Frieze.dbo.Marketing_Cost_Days

 -- averge marketing_cost by week
SELECT Weeks, ROUND(AVG(Marketing_Cost), 0) AS AverageMarketing_Cost
FROM (
    SELECT
        Date,
        Marketing_Cost,
		DATEDIFF(WEEK, '2020-11-09', CONVERT(DATE, Date, 103)) + 35 AS Weeks
    FROM Frieze.dbo.Marketing
) AS Subquery
GROUP BY Weeks
ORDER BY Weeks;
